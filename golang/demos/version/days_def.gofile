// Package main provides ...
package days

import (
	"fmt"
	"runtime"
	"time"
	// "local.com/jialinLib"
)

func f() (r int) {
	/*return step:
	1. assigne return value to rv ,rv is the data that will be taken by func caller
	2. issue defer
	3. return empty,function end
	*/
	t := 5
	defer func() {
		r = t + 10
		// t = t + 5

	}()
	return t

}

var days = [2][12]uint32{
	{30, 28, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30},
	{30, 29, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30},
}

func daysPerMonth(month, year uint32) uint32 {
	// days := [2][12]uint32{
	// 	{30, 28, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30},
	// 	{30, 29, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30},
	// }
	if year%4 == 0 {
		return days[1][month-1]
	}
	return days[0][month-1]
}

//
// func main() {
// 	runtime.GOMAXPROCS(2)
// 	// tmp := jialinLib.LibDemo(10)
// 	// fmt.Println(tmp)
//
// 	// var twoD [10][20]uint32
// 	// for i := 0; i < 10; i++ {
// 	// 	for j := 0; j < 20; j++ {
// 	// 		// twoD[i][j] = uint32(i * j)
// 	// 		twoD[i][j] = uint32(i * j)
// 	// 	}
// 	//
// 	// for _, v := range twoD {
// 	// 	fmt.Println(v)
// 	// }
//
// 	rf := f()
// 	fmt.Println(rf)
// 	for i := 0; i < 25; i++ {
// 		// go func() {
// 		// 	v := daysPerMonth(2, 2014)
// 		// 	v2 := daysPerMonth(2, 2012)
// 		// 	fmt.Println(v, v2)
// 		//
// 		// }()
// 	}
//
// 	time.Sleep(2 * time.Second)
//
// }
