// Package main provides ...
package main

import (
	"fmt"
)

type d struct {
	a int
}
type iarray interface {
	prin()
}

func (t *d) prin() {
	println("ddd", t.a)
}

// var ia []iarray = make([]iarray, 0)
func do() int {
	return 1
}

var ia []iarray = make([]iarray, 0)
var iap []*iarray

func main() {

	// iap={&d{a: 10},
	// &d{a: 10},
	// &d{a: 10},
	// &d{a: 10},
	// }
	ia = append(ia, &d{a: 10})
	ia = append(ia, &d{a: 12})
	ia = append(ia, &d{a: 14})
	ia = append(ia, &d{a: 19})

	for _, item := range ia {
		item.prin()
		// fmt.Println(item, value.prin())
	}

	fmt.Println()
	// id := 1024
	// pid := 10
	// if id > 100 {
	// 	// pid = id / 100
	// }
	// println(id, pid)
	//
	// do()
}
