#!/bin/bash

### BEGIN INIT INFO

#

# Default-Start: 2 3 4 5

# Default-Stop: 0 1 6

# Description: This file should be used to construct scripts to be placed in /etc/init.d.

#

# to use make this script work, for example:

# if you are using ubuntu:

# update-rc.d scriptName defaults 20 80 

# for more information find update-rc.d



# if you are using centOS or redHat:

#   chkconfig --add scriptName



#   defaults are 2345 on and 016 off so you can ignore the following steps if not try the followings:

#   chkconfig --level 2345 scriptName on

#   chkconfig --level 016 scriptNmae off 



#   for more information find chkconfig



### END INIT INFO





###########################

##start writing the script#

###########################

# Source function library  choose a library according to your linux distribution    and now I'm using centOS

##ubuntu##

#. /lib/lsb/init-functions

##ubuntu##



##centOS or redHat##

. /etc/rc.d/init.d/functions

##centOS or redHat##



## Fill in name of program here.

PROG="guetojJudger"

PROG_PATH="/home/jialin/OpenDemo/acm" ## Not need, but sometimes helpful (if $PROG resides in /opt for example).




start() {

	process_pid=`ps -axu |grep -v 'grep' |egrep "$PROG"|awk '{print $2}'`
	if [ -z $process_pid ];  then
    		$PROG_PATH/$PROG
		echo "start $PROG successfully,$PROG is running~"
	else
		echo "$PROG is running,don't start again"
	fi



}



stop() {

	process_pid=`ps -axu |grep -v 'grep' |egrep "$PROG"|awk '{print $2}'`
	if [ -z $process_pid ];  then
		echo "$PROG is not running~"
	else
		kill -9 $process_pid
		echo "$PROG is stopped"
	fi


#  echo "stopping $PROG"
#    ps axu |grep -v 'grep' |egrep "$PROG"|awk '{system("echo "$2)}'
#ps axu |grep -v 'grep' |egrep "$PROG"|awk '{system("kill -9 "$2)}'
       
#        echo "$PROG stopped"

}

statu() {

	process_pid=`ps -axu |grep -v 'grep' |egrep "$PROG"|awk '{print $2}'`
	if [ -z $process_pid ];  then
		echo "$PROG is not running~"
	else
		echo "statu:$PROG is running,pid is $process_pid,don't start again"
	fi
}

case "$1" in

    start)

        start

        exit 0

    ;;

    stop)

        stop

        exit 0

    ;;

    reload|restart|force-reload)

        stop

        start

       	statu 

        exit 0

    ;;
    statu)

       	statu 

        exit 0

    ;;


    **)

        echo "Usage: $0 {start|stop|reload}" 1>&2

        exit 1

    ;;

esac
