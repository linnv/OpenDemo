// Package main provides ...
package main

import (
	"encoding/json"
	"os"
	// "errors"
	"fmt"

	// "io/ioutil"
	// "os"
	"os/exec"
	// "path/filepath"
	// "strconv"
)

func main() {
	// ffprobe -v quiet -print_format json -show_format -show_streams
	// cmd := exec.Command("ffprobe", "-v", "quiet", "-print_format", "json", "-show_format", "-show_streams", "/Users/Jialin/Desktop/s.mp")

	// filePath := "/Users/Jialin/golang/src/ssp_web/public/resources/materials/2015/07/c4ca4238/Vm5h7oKFx2.mp4"
	// filePath := "//Users/Jialin/Downloads/mmm.mp4"
	// filePath := "//Users/Jialin/Downloads/small.webm"
	// filePath := "/Users/Jialin/video.mp4"

	filePath := "/Users/Jialin/Downloads/feelings_vp9-20130806-171.webm"

	bs := make([]byte, 20)
	f, err := os.Open(filePath)
	if err != nil {
		panic(err.Error())
	}
	if _, err = f.Read(bs); err != nil {
		panic(err.Error())
	}
	f.Close()
	cmd := exec.Command("ffprobe", "-v", "quiet", "-print_format", "json", "-show_format", "-show_streams", filePath)
	b, err := cmd.Output()
	// os.Remove(file)
	if err != nil {
		panic(err.Error())
	}
	var Info interface{}
	//@toDelete
	err = json.Unmarshal(b, &Info)
	if err != nil {
		panic(err.Error())
	}
	fmt.Printf("  string(b): %+v\n", string(b))
	//@toDelete
	fmt.Printf("  bs: %+v\n", bs)
	// fmt.Printf("  Info: %+v\n", Info)
}
